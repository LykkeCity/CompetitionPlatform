@using System.Threading.Tasks
@using CompetitionPlatform.Models.ProjectViewModels
@model ProjectViewModel

@{
    ViewData["Title"] = "Edit Project";
}

<section class="section section--lead section--padding">
    <div class="container">
        <div class="content__left">
            <div class="pull-right latest_updated">
                <span class="text-muted">Last updated</span> @Model.LastModified.ToString("MMMM dd, yyyy")
            </div>
            <h2>Edit project</h2>
        </div>
    </div>
</section>

<section class="section section--steps">
    @{
        var initiativeCircle = "";
        var competitionRegistrationCircle = "";
        var implementationCircle = "";
        var votingCircle = "";
        var archiveCircle = "";
        var votesCount = Model.VotesFor + Model.VotesAgainst;
        var numberOfVotes = votesCount == 1 ? votesCount + " VOTE" : votesCount + " VOTES";

        if (Model.Status == Status.Initiative)
        {
            initiativeCircle = "active";
        }
        if (Model.Status == Status.Registration)
        {
            initiativeCircle = "success";
            competitionRegistrationCircle = "active";
        }
        if (Model.Status == Status.Submission)
        {
            initiativeCircle = "success";
            competitionRegistrationCircle = "success";
            implementationCircle = "active";
        }
        if (Model.Status == Status.Voting)
        {
            initiativeCircle = "success";
            competitionRegistrationCircle = "success";
            implementationCircle = "success";
            votingCircle = "active";
        }
        if (Model.Status == Status.Archive)
        {
            initiativeCircle = "success";
            competitionRegistrationCircle = "success";
            implementationCircle = "success";
            votingCircle = "success";
            archiveCircle = "success";
        }

    }
    <div class="container">
        @if (Model.Status == Status.Initiative)
        {
            <div class="row">
                <div class="col-sm-9">
                    <p>The project must go through several stages before the competition starts. At Initiative must collect a minimum of 40 votes, for a competition. Once this amount will be collected, the project can be transferred to the status of competition registration.</p>
                </div>
                <div class="col-sm-3">
                    <div class="voting_group__value">@numberOfVotes</div>

                    @await Html.PartialAsync("VotingBarsPartial", new ProjectVoteViewModel
                    {
                        VotesFor = Model.VotesFor,
                        VotesAgainst = Model.VotesAgainst
                    })
                </div>
            </div>
        }
    </div>
</section>

<section class="section section--competition_edit">
    <div class="container">
        <div class="content__left">
            <form asp-action="SaveEditedProject" enctype="multipart/form-data" class="form form--default form--competition_edit">

                <fieldset class="form_fieldset">
                    <h3>Project Flow</h3>

                    <div class="flow flow--project">

                        @{
                            var enableRegistrationChecked = "checked";
                            if (Model.SkipRegistration)
                            {
                                enableRegistrationChecked = "";
                            }
                        }

                        <div class="flow__item">
                            <div class="flow__icon"></div>
                            <div class="flow__content">
                                <div class="flow__title h4">
                                    Registration
                                    <div class="switcher">
                                        <input id="enableRegistration" name="enableRegistration" type="checkbox" class="switcher__elem" value="true" @enableRegistrationChecked />
                                        <label for="enableRegistration" class="switcher__control"></label>
                                    </div>
                                </div>
                                <div class="flow__actions">
                                    <div class="form-group">
                                        <div class="input-group date datetimepicker">
                                            @if (Model.SkipRegistration)
                                            {
                                                <input id="registrationDeadlineDatepicker" asp-for="CompetitionRegistrationDeadline" class="form-control datetimepicker" style="display: none" />
                                            }
                                            else
                                            {
                                                <input id="registrationDeadlineDatepicker" asp-for="CompetitionRegistrationDeadline" class="form-control datetimepicker" />
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="flow__text">
                                    Lykke members have to summit the project application form to take part in your project. Registration deadline is time when you announce your project and early birds can register. Other participants may register any time from the project start till is implementation deadline.
                                </div>
                                <span asp-validation-for="CompetitionRegistrationDeadline" class="text-danger" />
                            </div>
                        </div>

                        <div class="flow__item">
                            <div class="flow__icon"></div>
                            <div class="flow__content">
                                <div class="flow__title h4">Submissions</div>
                                <div class="flow__actions">
                                    <div class="form-group">
                                        <div class="input-group date datetimepicker">
                                            <input asp-for="ImplementationDeadline" class="form-control datetimepicker" />
                                        </div>
                                    </div>
                                </div>
                                <div class="flow__text">
                                    Participants have to send project results before the implementation deadline.
                                </div>
                                <span asp-validation-for="ImplementationDeadline" class="text-danger" />
                            </div>
                        </div>

                        @{
                            var enableVotingChecked = "checked";
                            if (Model.SkipVoting)
                            {
                                enableVotingChecked = "";
                            }
                        }

                        <div class="flow__item">
                            <div class="flow__icon"></div>
                            <div class="flow__content">
                                <div class="flow__title h4">
                                    Voting
                                    <div class="switcher">
                                        <input id="enableVoting" name="enableVoting" type="checkbox" class="switcher__elem" value="true" @enableVotingChecked />
                                        <label for="enableVoting" class="switcher__control"></label>
                                    </div>
                                </div>
                                <div class="flow__actions">
                                    <div class="form-group">
                                        <div class="input-group date datetimepicker">
                                            @if (Model.SkipVoting)
                                            {
                                                <input id="votingDeadlineDatepicker" asp-for="VotingDeadline" class="form-control datetimepicker" style="display: none" />
                                            }
                                            else
                                            {
                                                <input id="votingDeadlineDatepicker" asp-for="VotingDeadline" class="form-control datetimepicker" />
                                            }
                                        </div>
                                    </div>
                                </div>
                                <div class="flow__text">
                                    Project Creator should select the best quality project solutions by his own or organize voting process.
                                </div>
                                <span asp-validation-for="VotingDeadline" class="text-danger votingDeadlineDatepickerValidation" />
                            </div>
                        </div>

                    </div>
                </fieldset>

                <h3>Project Task</h3>

                <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                <input asp-for="@Model.Id" type="hidden" />
                <input asp-for="@Model.VotesFor" type="hidden" />
                <input asp-for="@Model.VotesAgainst" type="hidden" />
                <input asp-for="@Model.StreamId" type="hidden" />

                @if (Model.IsAdmin)
                {
                    {
                        var draft = Model.Status == Status.Draft;
                        var skipVoting = Model.SkipVoting;
                    }
                    <div class="row">
                        <div class="col-sm-6">
                            <label class="control-label">Status</label>
                            <div class="form-group" data-control="select">
                                <select asp-for="@Model.Status" class="form-control">
                                    @if (Model.Status == Status.Draft)
                                    {
                                        <option value=@Status.Draft.ToString()>Status: @Status.Draft.ToString()</option>
                                    }

                                    <option value=@Status.Initiative.ToString()>Status: @Status.Initiative.ToString()</option>
                                    @if (!Model.SkipRegistration)
                                    {
                                        <option value=@Status.Registration.ToString()>Status: @Status.Registration.ToString()</option>
                                    }
                                    <option value=@Status.Submission.ToString()>Status: @Status.Submission.ToString()</option>
                                    @if (!Model.SkipVoting)
                                    {
                                        <option value=@Status.Voting.ToString()>Status: @Status.Voting.ToString()</option>
                                    }
                                    <option value=@Status.Archive.ToString()>Status: @Status.Archive.ToString()</option>
                                </select>
                                <span class="text-danger field-validation-error">
                                    <span class="field-validation-error">
                                        @Html.ValidationMessageFor(x => x.Status)
                                    </span>
                                </span>
                            </div>
                        </div>
                    </div>
                }
                else if (Model.IsAuthor && (Model.Status == Status.Draft || Model.Status == Status.Initiative))
                {
                    <div class="row">
                        <div class="col-sm-6">
                            <label class="control-label">Status</label>
                            <div class="form-group" data-control="select">
                                <select asp-for="@Model.Status" class="form-control">
                                    @if (Model.Status == Status.Draft)
                                    {
                                        <option value=@Status.Draft.ToString()>Status: @Status.Draft.ToString()</option>
                                        <option value=@Status.Initiative.ToString()>Status: @Status.Initiative.ToString()</option>
                                    }
                                    @if (Model.Status == Status.Initiative)
                                    {
                                        <option value=@Status.Initiative.ToString()>Status: @Status.Initiative.ToString()</option>
                                    }
                                </select>
                            </div>
                        </div>
                    </div>
                }

                <div class="form-group">
                    <label asp-for="Name" class="control-label"></label>
                    <input asp-for="Name" class="form-control" />
                    <span asp-validation-for="Name" class="text-danger" />
                </div>

                <div class="form-group">
                    <label asp-for="NameTag" class="control-label"></label>
                    <input asp-for="NameTag" class="form-control" />
                    <span asp-validation-for="NameTag" class="text-danger" />
                </div>

                <p class="text-muted">Title Note will appear near your project's name. Use it to provide additional information - for example if the project is a RFP (tender) or a vacancy.</p>


                @if (Model.Status == Status.Draft)
                {
                    <div class="form-group">
                        <label asp-for="ProjectUrl" class="control-label"></label>
                        <input asp-for="ProjectUrl" class="form-control" />
                        <span asp-validation-for="ProjectUrl" class="text-danger" />
                        @Html.ValidationMessageFor(x => x.ProjectUrl)
                    </div>
                }

                <div class="form-group">
                    <div class="row">
                        <label asp-for="Overview" class="control-label col-sm-4"></label>
                    </div>
                    <textarea asp-for="Overview" class="form-control" rows="10"></textarea>
                    <span asp-validation-for="Overview" class="text-danger" />
                </div>

                <div class="form-group">
                    <div class="row">
                        <label asp-for="Description" class="control-label col-sm-4"></label>

                    </div>
                    <textarea asp-for="Description" class="form-control richEditor" rows="10"></textarea>
                    <span asp-validation-for="Description" class="text-danger" />
                </div>

                <div class="form-group">
                    <label class="control-label">Brief</label>
                    <div class="fileupload">
                        <label class="btn btn--default fileupload__btn">
                            Choose File... <input id="file" type="file" name="File" style="display: none;">
                        </label>
                        <span id="fileInputHelperText" class="fileupload__notice">Maximum file size is 3Mb</span>
                    </div>
                </div>

                <div class="row">
                    <div class="col-sm-6">
                        <label class="control-label">Category:</label>
                        <div class="form-group" data-control="select">
                            <select asp-for="@Model.Category" class="form-control">
                                @foreach (var category in Model.ProjectCategories)
                                {
                                    <option>@category</option>
                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-sm-6">
                        <div class="form-group">
                            <label class="control-label">Tags (comma separated)</label>
                            <input asp-for="Tags" class="form-control" />
                        </div>
                    </div>
                </div>

                <h4 class="form_title">BUDGET</h4>
                <p class="text-muted">Any of the citizens of Lykke City will be able to finance the project. You can enter the estimated budget of the project. You can give the project the entire fund to one winner, and can spread among several.</p>

                <div class="form-group">
                    <label class="control-label">1<sup>st</sup> prize</label>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="row">
                                <div class="col-sm-1">
                                    <div class="prize__value">$</div>
                                </div>
                                <div class="col-sm-11">
                                    <input asp-for="BudgetFirstPlace" class="form-control" />
                                </div>
                            </div>
                            <span asp-validation-for="BudgetFirstPlace" class="text-danger" />
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label class="control-label">2<sup>nd</sup> prize</label>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="row">
                                <div class="col-sm-1">
                                    <div class="prize__value">$</div>
                                </div>
                                <div class="col-sm-11">
                                    <input asp-for="BudgetSecondPlace" class="form-control" />
                                </div>
                            </div>
                            <span asp-validation-for="BudgetSecondPlace" class="text-danger" />
                        </div>
                    </div>
                </div>

                <div class="form-group">
                    <label asp-for="PrizeDescription" class="control-label"></label>
                    <input asp-for="PrizeDescription" class="form-control" />
                    <span asp-validation-for="PrizeDescription" class="text-danger" />
                </div>

                <h4 class="form_title">WINNERS</h4>
                <p class="text-muted">You can leave this empty to set winners automatically.</p>

                <div class="form-group add_winner">
                    @for (int i = 0; i < (Model.Winners?.Count??0) + 1; i++)
                    {
                        <div class="row">
                            <div class="col-sm-6">
                                <label class="control-label">Winner</label>
                                <select asp-for="@Model.Winners[i].WinnerId" class="form-control">
                                    <option></option>
                                    @foreach (var part in Model.ParticipantsPartial.Participants)
                                    {
                                        var selected = "";
                                        if ((Model.Winners?.Count ?? 0) > 0 && Model.Winners[i].WinnerId == part.UserId)
                                        {
                                            selected = "selected";
                                        }

                                        <option value="@part.UserId" @selected>@part.UserId</option>
                                    }
                                </select>
                            </div>
                            <div class="col-sm-5">
                                <label class="control-label">Winning Place</label>
                                <input asp-for="@Model.Winners[i].Place" class="form-control" />
                            </div>
                            <div class="col-sm-1">
                                <label class="control-label"></label>
                                <button type="button" class="btn btn--icon btn_delete_winner" style="margin-top:40px;"> 
                                    <i class="icon icon--trash"></i>
                                </button>
                            </div>
                        </div>
                    }
                </div>
                <button type="button" class="btn btn_add_winner"><i class="icon icon--add"></i></button>

                <h4 class="form_title">PROGRAMMING RESOURCES</h4>
                <p class="text-muted">You can reference a repository that will help with the development of the project.</p>

                <div class="row">
                    <div class="col-sm-5">
                        <div class="form-group">
                            <label asp-for="ProgrammingResourceName" class="control-label"></label>
                            <input asp-for="ProgrammingResourceName" class="form-control" />
                            <span asp-validation-for="ProgrammingResourceName" class="text-danger" />
                        </div>
                    </div>
                    <div class="col-sm-7">
                        <div class="form-group">
                            <label asp-for="ProgrammingResourceLink" class="control-label"></label>
                            <input asp-for="ProgrammingResourceLink" class="form-control" />
                            <span asp-validation-for="ProgrammingResourceLink" class="text-danger" />
                        </div>
                    </div>
                </div>

                @if (Model.IsAdmin)
                {
                    <h4 class="form_title">PROJECT AUTHOR</h4>

                    <div class="row">
                        <div class="col-sm-5">
                            <div class="form-group">
                                <label asp-for="AuthorId" class="control-label"></label>
                                <input asp-for="AuthorId" class="form-control" />
                                <span asp-validation-for="AuthorId" class="text-danger" />
                            </div>
                        </div>
                        <div class="col-sm-7">
                            <div class="form-group">
                                <label asp-for="AuthorFullName" class="control-label"></label>
                                <input asp-for="AuthorFullName" class="form-control" />
                                <span asp-validation-for="AuthorFullName" class="text-danger" />
                            </div>
                        </div>
                    </div>
                }


                @if (Model.IsAdmin)
                {

                    <div class="row">

                        <div class="col-sm-6">
                            <p class="text-muted">You can add this project to the overall chain, which is called Stream. The current project will be one of the stages of the Stream.</p>
                            <label class="control-label">Stream:</label>
                            <div class="form-group" data-control="select">
                                <select asp-for="@Model.StreamType" class="form-control">
                                    <option>None</option>
                                    <option>Existing</option>
                                    <option>New</option>
                                </select>
                            </div>
                        </div>
                    </div>
                    <fieldset id="hiddenStreamElements" class="form_fieldset" style="display: none;">


                        <div class="form-group newStreamNameTextbox">
                            <label asp-for="NewStreamName" class="control-label"></label>
                            <input asp-for="NewStreamName" class="form-control" />
                            <span asp-validation-for="NewStreamName" class="text-danger" />
                        </div>

                        <div class="existingStreamDropdown">
                            <label class="control-label">Stream:</label>
                            <div class="form-group" data-control="select">
                                <select asp-for="@Model.ExistingStreamId" class="form-control">
                                    <option value="">Select Stream</option>
                                    @foreach (var compactStream in Model.CompactStreams)
                                    {
                                        <option value="@compactStream.StreamId">@compactStream.StreamName</option>
                                    }
                                </select>
                            </div>
                        </div>

                        @*<table>
                                <thead>
                                <tr>
                                    <th>Select</th>
                                    <th>Place</th>
                                    <th>Name</th>
                                </tr>
                                </thead>
                            </table>
                            <table id="streamProjectsTable" class="streamProjectsTable">
                                <thead>
                                </thead>
                                <tbody>
                                </tbody>
                            </table>*@
                        <div id="streamProjectsTableEdit">
                            @await Html.PartialAsync("EditStreamTablePartial", Model.EditStreamProjects)
                        </div>
                        <div>
                            <input type="text" id="place" placeholder="Place">
                            @*<input type="text" id="projectName" placeholder="ProjectName">*@
                            <select name="projectName" id="projectName">
                                @foreach (var project in Model.AllStreamProjects)
                                {
                                    <option value="@project.ProjectId">@project.ProjectName</option>
                                }
                            </select>
                            <input type="button" class="add-row" value="Add Row">
                        </div>
                        <button type="button" class="delete-row">Delete Row</button>

                    </fieldset>
                }

                <input asp-for="@Model.SerializedStream" type="hidden" />
                <div class="form__submit">
                    <div class="row">
                        <div class="col-sm-6">
                            <button type="submit" class="btn">Save changes</button>
                        </div>
                    </div>
                </div>
            </form>
        </div>
    </div>
</section>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script>
        var winnerCount = @(Model.Winners?.Count ?? 0);
        $(".btn_add_winner").on("click", function () {
            var template = $(".add_winner .row:first").prop("outerHTML");
            $(template.replace(/0/g, winnerCount)).appendTo(".add_winner");
            winnerCount++;
        });

        $(".add_winner").on("click", ".btn_delete_winner", function () {
            if ($(".add_winner .row").length > 1) {
                $(this).closest(".add_winner .row").remove();
                winnerCount--;
            }
        });
    </script>
}
